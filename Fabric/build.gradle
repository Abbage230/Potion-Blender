plugins {
    id 'fabric-loom' version '1.3-SNAPSHOT'
    id 'maven-publish'
    id 'idea'
}

archivesBaseName = "${mod_name}-${minecraft_version}-FABRIC"
if (System.getenv().RELEASE_MODE == null) {
    archivesBaseName += '-SNAPSHOT'
}


dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"
    implementation group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.1'
    implementation project(":Common")
}


loom {

    mixin.defaultRefmapName = "potionblender.refmap.json"

    runs {
        client {
            client()
            setConfigName("Fabric Client")
            ideConfigGenerated(true)
            runDir("run")
        }
        server {
            server()
            setConfigName("Fabric Server")
            ideConfigGenerated(true)
            runDir("run")
        }
    }
}

tasks.withType(JavaExec) {
    if (System.getenv().RELEASE_MODE == null) {
        enableAssertions = true
    }
}

processResources {
    from project(":Common").sourceSets.main.resources

    inputs.properties(
            "mod_id" : mod_id,
            "version": project.version,
            "minecraft_version": minecraft_version,
            "mod_name": mod_name,
            "mod_description" : mod_description,
            "fabric_loader_version": fabric_loader_version,
            "mod_author": mod_author
    )


    filesMatching("fabric.mod.json") {
        expand (
                "mod_id": mod_id,
                "version": project.version,
                "minecraft_version": minecraft_version,
                "mod_name" : mod_name,
                "mod_description" : mod_description,
                "mod_author" : mod_author,
                "fabric_loader_version": fabric_loader_version,
        )
    }

    filesMatching('pack.mcmeta') {
        expand("mod_name": mod_name)
    }
}

jar{
    manifest {
        attributes([
                "Specification-Title": mod_name,
                "Specification-Vendor": mod_author,
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": mod_name,
                "Implementation-Version": version,
                "Implementation-Vendor" : mod_author,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

tasks.withType(JavaCompile) {
    source(project(":Common").sourceSets.main.allSource)
}
