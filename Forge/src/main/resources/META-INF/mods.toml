# This is an example mods.toml file. It contains the data relating to the loading mods.
# There are several mandatory fields (#mandatory), and many more that are optional (#optional).
# The overall format is standard TOML format, v0.5.0.
# Note that there are a couple of TOML lists in this file.
# Find more information on toml format here:  https://github.com/toml-lang/toml
# The name of the mod loader type to load - for regular FML @Mod mods it should be javafml
modLoader="javafml" #mandatory
# A version range to match for said mod loader - for regular FML @Mod it will be the forge version
loaderVersion="[43,)" #mandatory This is typically bumped every Minecraft version by Forge. See our download page for lists of versions.
# The license for you mod. This is mandatory metadata and allows for easier comprehension of your redistributive properties.
# Review your options at https://choosealicense.com/. All rights reserved is the default copyright stance, and is thus the default here.
license="GPLv3"
# A URL to refer people to when problems occur with this mod
issueTrackerURL="https://github.com/motivational-dragon/Potion-Blender/issues" #optional
# A list of mods - how many allowed here is determined by the individual mod loader
[[mods]] #mandatory
# The modid of the mod
modId="potionblender" #mandatory
# The version number of the mod - there's a few well known ${} variables useable here or just hardcode it
# ${file.jarVersion} will substitute the value of the Implementation-Version as read from the mod's JAR file metadata
# see the associated build.gradle script for how to populate this completely automatically during a build
version="${file.jarVersion}" #mandatory
 # A display name for the mod
displayName="Potion-Blender" #mandatory
# A URL to query for updates for this mod. See the JSON update specification https://mcforge.readthedocs.io/en/latest/gettingstarted/autoupdate/
#updateJSONURL="https://change.me.example.invalid/updates.json" #optional
# A URL for the "homepage" for this mod, displayed in the mod UI
#displayURL="https://change.me.to.your.mods.homepage.example.invalid/" #optional
# A file name (in the root of the mod JAR) containing a logo for display
#logoFile="multiloader.png" #optional
# A text field displayed in the mod UI
#credits="Thanks for this example mod goes to Java" #optional
# A text field displayed in the mod UI
authors="Motivational_Dragon" #optional
# The description text for the mod (multi line!) (#mandatory)
description='''
# Potion Blender

## Overview
Potion Blender is a small mod to merge potion effects into one item, allowing for interesting combinations.

<details open>
<summary>Gif overview</summary>
<img src="https://github.com/motivational-dragon/Potion-Blender/blob/b889de864c5940b860df42366c82e25ca3d16908/img/potion_craft.gif"  alt=""/>
</details>

## How to use

### 1 - Cauldron

First, you need to make a special cauldron. Do so by right-clicking a campfire with a vanilla cauldron.

### 2 - Starting to blend

Then, throw a potion into the cauldron. It can be any vanilla potion that is not Splash or Lingering. The potion effects will be the base of your combined brew. You can then add up to two more potions (neither splash nor lingering) to add their effects to the final product.

### 3 - The final ingredient

Now it is time to finish the brewing and choose the type of potion you desire. You may choose one of three of these ingredients :

-  Nether wart ; Normal potion
-  Gunpowder ; Splash potion
-  Dragon Breath ; Lingering potion


### 4 - Using arrows

The combined potions can be used with arrows using the vanilla craft to add the combined effects to the arrows.

### 5 - Cancelling the blend

You can reset the cauldron anytime by right-clicking on the cauldron to get back your ingredients.

### Effect stacking
Adding the same effect to a potion multiple times results in effects adding. It, however, comes with a price as with each stacked effect gain decay. The first stacked effect adds 50% of its duration, and the 2nd one 25%.

Instant Effects does not stack as duplicated effects are lost.

## Configuration
The configuration file is in your .minecraft folder at potionblender/potion_blender_config.json

The configurable options are:

- max_effects: The maximum number of potions in a cauldron. Be careful when updating this value in an already existing world, as it may cause desync on an already placed cauldron.


## Known issues
Some rendering mods (like sodium) can sometimes cause the cauldron to appear with water instead of the potion's colors.
## License
This mod is available under the GPLv3 license.
'''
# A dependency - use the . to indicate dependency for a specific modid. Dependencies are optional.
[[dependencies.potionblender]] #optional
    # the modid of the dependency
    modId="forge" #mandatory
    # Does this dependency have to exist - if not, ordering below must be specified
    mandatory=true #mandatory
    # The version range of the dependency
    versionRange="[43,)" #mandatory
    # An ordering relationship for the dependency - BEFORE or AFTER required if the relationship is not mandatory
    ordering="NONE"
    # Side this dependency is applied on - BOTH, CLIENT or SERVER
    side="BOTH"
# Here's another dependency
[[dependencies.potionblender]]
    modId="minecraft"
    mandatory=true
# This version range declares a minimum of the current minecraft version up to but not including the next major version
    versionRange="[1.19.2,1.20)"
    ordering="NONE"
    side="BOTH"
